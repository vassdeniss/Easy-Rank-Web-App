@using Microsoft.AspNetCore.Identity
@inject SignInManager<EasyRankUser> SignInManager
@inject UserManager<EasyRankUser> UserManager

<ul class="navbar-nav">
@if (this.SignInManager.IsSignedIn(User))
{
	<li class="nav-item" style="align-self: center;">
        @if (this.UserManager.GetUserAsync(this.User).Result.ProfilePicture != null)
        {
            <img src="data:image/*; base64, @Convert.ToBase64String(this.UserManager.GetUserAsync(this.User).Result.ProfilePicture!)" style="width: 40px; height: 40px; object-fit: cover; border-radius: 30px;" />
        }
	</li>
	<li class="nav-item">
        @if (this.User.IsInRole("Administrator"))
        {
			<a asp-area="" class="nav-link text-light" asp-controller="Manage" asp-action="Index">Hello Admin @this.User.Identity?.Name!</a>
        }
        else
        {
	        <a asp-area="" class="nav-link text-light" asp-controller="Manage" asp-action="Index">Hello @this.User.Identity?.Name!</a>
        }
	</li>
	<li class="nav-item">
        <form class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@this.Url.Action("Index", "Home", new { area = "" })">
            <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-light" asp-controller="Account" asp-action="Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-light" asp-controller="Account" asp-action="Login">Login</a>
    </li>
}
</ul>
