@using EasyRank.Web.Extensions
@model AllRanksViewModel
@{
	this.Layout = null;
}

<!DOCTYPE html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
	    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
	    <title>EasyRank All Rankings</title>
	    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
		<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
		
		<style>
			.row {
				justify-content: center;
			}
		</style>
	</head>
	<body>
		<header>
			<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark bg-primary border-bottom box-shadow mb-3">
				<div class="container-fluid">
					<a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">EasyRank</a>
					<button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
					        aria-expanded="false" aria-label="Toggle navigation">
						<span class="navbar-toggler-icon"></span>
					</button>
					<div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
						<ul class="navbar-nav flex-grow-1">
							<li class="nav-item">
								<a class="nav-link text-light" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
							</li>
							<li class="nav-item dropdown">
								<a class="nav-link dropdown-toggle text-light" href="#" id="navbarDarkDropdownMenuLink" role="button" data-bs-toggle="dropdown" aria-expanded="false">
									Rankings
								</a>
								<ul class="dropdown-menu dropdown-menu-dark" aria-labelledby="navbarDarkDropdownMenuLink">
									<li>
										<a class="dropdown-item" asp-area="" asp-controller="Rank" asp-action="All">All Rankings</a>
										<a class="dropdown-item" asp-area="" asp-controller="Rank" asp-action="Create">Create Rank</a>
										<a class="dropdown-item" asp-area="" asp-controller="Rank" asp-action="EditMenu">Edit Rank</a>
										<a class="dropdown-item" asp-area="" asp-controller="Rank" asp-action="DeleteMenu">Delete Rank</a>
									</li>
								</ul>
							</li>
							</ul>
						<partial name="_LoginPartial" />
					</div>
				</div>
			</nav>
		</header>

	    <div class="container-fluid">
	        <main role="main" class="pb-3">
		        <div class="text-center row">
			        @foreach (RankPageViewModel rank in this.Model.Ranks)
			        {
				        <div class="card border-secondary m-3 p-0" style="width: 15rem;">
					        @if (rank.Image != null)
					        {
						        <img class="card-img-top" style="object-fit: fill;" src="data:image/*;base64,@(Convert.ToBase64String(rank.Image))" alt="@rank.ImageAlt">
					        }
					        else
					        {
						        <img class="card-img-top" style="object-fit: fill;" src="" alt="@rank.ImageAlt">

					        }
					        <div class="card-body">
						        <h5 class="card-title mt-1">@rank.RankingTitle</h5>
						        <p class="mb-0">Created by: @rank.CreatedByUserName</p>
						        <p class="mb-0">Likes: @rank.LikeCount</p>
						        <p class="mb-0">Comments: @rank.CommentCount</p>
					        </div>
					        <div class="card-body">
						        <a asp-controller="Rank" asp-action="ViewRanking" asp-route-rankId="@rank.Id" class="card-link">View</a>
						        @if (this.User.Identity?.Name == rank.CreatedByUserName || this.User.IsAdmin())
						        {
							        <span class="text-primary mx-3">|</span>
							        <a asp-controller="Rank" asp-action="Edit" asp-route-rankId="@rank.Id" class="card-link">Edit</a>
							        <span class="text-primary mx-3">|</span>
							        <a asp-controller="Rank" asp-action="Delete" asp-route-rankId="@rank.Id" class="card-link">Delete</a>
						        }
					        </div>
					        <div class="card-footer text-muted" style="font-size: 14px; text-align: center;">
						        Created On: @rank.CreatedOn
					        </div>
				        </div>
			        }
		        </div>
				
		        @{
			        int previousPage = this.Model.CurrentPage - 1;
			        if (previousPage < 1)
			        {
				        previousPage = 1;
			        }

			        double maxPage = 
				        Math.Ceiling((double)this.Model.RankCount / 12);

			        bool shouldButtonBeDisabled = 
				        this.Model.CurrentPage == maxPage || !this.Model.Ranks.Any();
		        }

		        <div class="mt-5">
			        <ul class="pagination justify-content-center">
					<li class="page-item bg-secondary @(this.Model.CurrentPage == 1 ? "disabled" : string.Empty) mx-2">
					        <a class="page-link active" asp-action="All" asp-route-page="@previousPage">&laquo;</a>
				        </li>
				        <li class="page-item bg-secondary @(shouldButtonBeDisabled ? "disabled" : string.Empty) mx-2">
					        <a class="page-link active" asp-action="All" asp-route-page="@(this.Model.CurrentPage + 1)">&raquo;</a>
				        </li>
			        </ul>
		        </div>
	        </main>
	    </div>

		<footer class="border-top footer text-muted">
			<div class="container">
				&copy; 2022 - EasyRank.Web
			</div>
		</footer>

	    <script src="~/lib/jquery/dist/jquery.min.js"></script>
	    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
		<script src="~/js/site.js" asp-append-version="true"></script>
	</body>
</html>
